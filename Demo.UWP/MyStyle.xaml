<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="using:Demo.UWP"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:mycontrols="using:Demo.UWP.Controls"
	mc:Ignorable="d">
	<Style TargetType="mycontrols:ImageButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="mycontrols:ImageButton">
					<Grid x:Name="Grid" Background="Transparent">
						<Image
							x:Name="ImageBack"
							Width="AUTO"
							Height="AUTO"
							Margin="10"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Opacity="0"
							RenderTransformOrigin="0.5,0.5"
							Source="{TemplateBinding ImageSrc}"
							Stretch="Uniform">
							<Image.RenderTransform>
								<CompositeTransform />
							</Image.RenderTransform>
						</Image>
						<Image
							x:Name="ImageFront"
							Width="AUTO"
							Height="AUTO"
							Margin="10"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							RenderTransformOrigin="0.5,0.5"
							Source="{TemplateBinding ImageSrc}"
							Stretch="Uniform">
							<Image.RenderTransform>
								<CompositeTransform />
							</Image.RenderTransform>
						</Image>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />
								<VisualState x:Name="Pressed">
									<Storyboard>
										<PointerDownThemeAnimation Storyboard.TargetName="Grid" />
										<DoubleAnimation
											d:IsOptimized="True"
											Storyboard.TargetName="ImageFront"
											Storyboard.TargetProperty="(UIElement.Opacity)"
											To="0.5"
											Duration="0" />
										<DoubleAnimation
											d:IsOptimized="True"
											Storyboard.TargetName="ImageFront"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)"
											To="0.8"
											Duration="0" />
										<DoubleAnimation
											d:IsOptimized="True"
											Storyboard.TargetName="ImageFront"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)"
											To="0.8"
											Duration="0" />
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImageBack" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="0" Value="0" />
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5" />
											<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImageBack" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
											<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="2" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImageBack" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
											<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="2" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ButtonStyle1" TargetType="Button">
		<Setter Property="Background" Value="{ThemeResource ButtonBackground}" />
		<Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderBrush}" />
		<Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}" />
		<Setter Property="Padding" Value="8,4,8,4" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="UseSystemFocusVisuals" Value="True" />
		<Setter Property="FocusVisualMargin" Value="-3" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
						<ContentPresenter
							x:Name="ContentPresenter"
							Padding="{TemplateBinding Padding}"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							AutomationProperties.AccessibilityView="Raw"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							ContentTransitions="{TemplateBinding ContentTransitions}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ListViewStyle1" TargetType="ListView">
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="TabNavigation" Value="Once" />
		<Setter Property="IsSwipeEnabled" Value="True" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
		<Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
		<Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
		<Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
		<Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
		<Setter Property="UseSystemFocusVisuals" Value="True" />
		<Setter Property="ItemContainerTransitions">
			<Setter.Value>
				<TransitionCollection>
					<AddDeleteThemeTransition />
					<ContentThemeTransition />
					<ReorderThemeTransition />
					<EntranceThemeTransition IsStaggeringEnabled="False" />
				</TransitionCollection>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<ItemsStackPanel Orientation="Vertical" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListView">
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<ScrollViewer
							x:Name="ScrollViewer"
							AutomationProperties.AccessibilityView="Raw"
							BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
							HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
							HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
							IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
							IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
							IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
							IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
							IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
							TabNavigation="{TemplateBinding TabNavigation}"
							VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
							VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
							ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
							<ItemsPresenter
								Padding="{TemplateBinding Padding}"
								Footer="{TemplateBinding Footer}"
								FooterTemplate="{TemplateBinding FooterTemplate}"
								FooterTransitions="{TemplateBinding FooterTransitions}"
								Header="{TemplateBinding Header}"
								HeaderTemplate="{TemplateBinding HeaderTemplate}"
								HeaderTransitions="{TemplateBinding HeaderTransitions}" />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ListViewItemStyle1" TargetType="ListViewItem">
		<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="Background" Value="{ThemeResource ListViewItemBackground}" />
		<Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}" />
		<Setter Property="TabNavigation" Value="Local" />
		<Setter Property="IsHoldingEnabled" Value="True" />
		<Setter Property="Padding" Value="0" />
		<!--让宽度撑满-->
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
		<Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
		<Setter Property="AllowDrop" Value="False" />
		<Setter Property="UseSystemFocusVisuals" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListViewItem">
					<ListViewItemPresenter
						HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
						VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
						CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
						CheckBrush="{ThemeResource ListViewItemCheckBrush}"
						CheckMode="{ThemeResource ListViewItemCheckMode}"
						ContentMargin="{TemplateBinding Padding}"
						ContentTransitions="{TemplateBinding ContentTransitions}"
						Control.IsTemplateFocusTarget="True"
						DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
						DragBackground="{ThemeResource ListViewItemDragBackground}"
						DragForeground="{ThemeResource ListViewItemDragForeground}"
						DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
						FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
						FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
						PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
						PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}"
						PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
						PressedBackground="{ThemeResource ListViewItemBackgroundPressed}"
						ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
						SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}"
						SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
						SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}"
						SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}"
						SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
